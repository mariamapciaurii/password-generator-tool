{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","password","passwordLength","setPasswordLength","includeUppercase","setIncludeUppercase","includeLowercase","setIncludeLowercase","includeNumbers","setIncludeNumbers","includeSymbols","setIncludeSymbols","className","htmlFor","defaultValue","onChange","e","target","value","type","id","name","max","min","checked","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sOAuFeA,MApFf,WACE,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KACA,GADA,KAC4CD,mBAAS,KAArD,mBAAOE,EAAP,KAAuBC,EAAvB,KACA,EAAgDH,oBAAS,GAAzD,mBAAOI,EAAP,KAAyBC,EAAzB,KACA,EAAgDL,oBAAS,GAAzD,mBAAOM,EAAP,KAAyBC,EAAzB,KACA,EAA4CP,oBAAS,GAArD,mBAAOQ,EAAP,KAAuBC,EAAvB,KACA,EAA4CT,oBAAS,GAArD,mBAAOU,EAAP,KAAuBC,EAAvB,KAEA,OACE,qBAAKC,UAAU,MAAf,SACE,qBAAKA,UAAU,sBAAf,SACE,sBAAKA,UAAU,+BAAf,UACE,oBAAIA,UAAU,0BAAd,gCACA,sBAAKA,UAAU,8BAAf,UACE,oBAAIA,UAAU,0BAAd,SAAyCX,IACzC,wBAAQW,UAAU,sBAAlB,SACE,mBAAGA,UAAU,qBAIjB,sBAAKA,UAAU,oDAAf,UACE,uBAAOC,QAAQ,oBAAf,6BACA,uBACEC,aAAcZ,EACda,SAAU,SAACC,GAAD,OAAOb,EAAkBa,EAAEC,OAAOC,QAC5CC,KAAM,SACNC,GAAG,oBACHC,KAAK,oBACLC,IAAI,KACJC,IAAI,SAIR,sBAAKX,UAAU,yBAAf,UACE,uBAAOC,QAAQ,oBAAf,gCACA,uBACEW,QAASpB,EACTW,SAAU,SAACC,GAAD,OAAOX,EAAoBW,EAAEC,OAAOO,UAC9CL,KAAK,WACLC,GAAG,oBACHC,KAAK,yBAIT,sBAAKT,UAAU,yBAAf,UACE,uBAAOC,QAAQ,oBAAf,+BACA,uBACEW,QAASlB,EACTS,SAAU,SAACC,GAAD,OAAOT,EAAoBS,EAAEC,OAAOO,UAC9CL,KAAK,WACLC,GAAG,oBACHC,KAAK,yBAIT,sBAAKT,UAAU,yBAAf,UACE,uBAAOC,QAAQ,kBAAf,6BACA,uBACEW,QAAShB,EACTO,SAAU,SAACC,GAAD,OAAOP,EAAkBO,EAAEC,OAAOO,UAC5CL,KAAK,WACLC,GAAG,kBACHC,KAAK,uBAIT,sBAAKT,UAAU,yBAAf,UACE,uBAAOC,QAAQ,kBAAf,6BACA,uBACEW,QAASd,EACTK,SAAU,SAACC,GAAD,OAAOL,EAAkBK,EAAEC,OAAOO,UAC5CL,KAAK,WACLC,GAAG,kBACHC,KAAK,uBAGT,wBAAQT,UAAU,0BAAlB,uCCnEKa,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.dd05e18d.chunk.js","sourcesContent":["import React , {useState} from 'react' ;\nimport './App.css';\n\nfunction App() {\n  const [password, setPassword] = useState('')\n  const [passwordLength, setPasswordLength] = useState(32)\n  const [includeUppercase, setIncludeUppercase] = useState(false)\n  const [includeLowercase, setIncludeLowercase] = useState(false)\n  const [includeNumbers, setIncludeNumbers] = useState(false)\n  const [includeSymbols, setIncludeSymbols] = useState(false)\n\n  return (\n    <div className=\"App\">\n      <div className=\"Generator-Container\">\n        <div className=\"Generator-Container__Content\">\n          <h2 className=\"Generator-Header__Title\">Password Generator</h2>\n          <div className=\"Generator-Password__Wrapper\">\n            <h3 className=\"Password-Wrapper__Title\">{password}</h3>\n            <button className=\"Password-Coppy__btn\">\n              <i className='far fa-copy'></i>\n            </button>\n          </div>\n\n          <div className=\"Generator-Setting__box Generator-Password__Length\">\n            <label htmlFor=\"password-strength\">Password Lenght</label>\n            <input\n              defaultValue={passwordLength}\n              onChange={(e) => setPasswordLength(e.target.value)}\n              type ='number'\n              id='password-strength'\n              name='password-strength'\n              max='32'\n              min='4'\n            />\n          </div>\n\n          <div className='Generator-Setting__box'>\n            <label htmlFor='uppercase-letters'>Include Uppercase </label>\n            <input\n              checked={includeUppercase}\n              onChange={(e) => setIncludeUppercase(e.target.checked)}\n              type='checkbox'\n              id='uppercase-letters'\n              name='uppercase-letters'\n            />\n          </div>\n\n          <div className='Generator-Setting__box'>\n            <label htmlFor='lowercase-letters'>Include Lowercase</label>\n            <input\n              checked={includeLowercase}\n              onChange={(e) => setIncludeLowercase(e.target.checked)}\n              type='checkbox'\n              id='lowercase-letters'\n              name='lowercase-letters'\n            />\n          </div>\n\n          <div className='Generator-Setting__box'>\n            <label htmlFor='include-numbers'>Include Numbers</label>\n            <input\n              checked={includeNumbers}\n              onChange={(e) => setIncludeNumbers(e.target.checked)}\n              type='checkbox'\n              id='include-numbers'\n              name='include-numbers'\n            />\n          </div>\n\n          <div className='Generator-Setting__box'>\n            <label htmlFor='include-symbols'>Include Symbols</label>\n            <input\n              checked={includeSymbols}\n              onChange={(e) => setIncludeSymbols(e.target.checked)}\n              type='checkbox'\n              id='include-symbols'\n              name='include-symbols'\n            />\n          </div>\n          <button className=\"Generator-Password__btn\">GENERATE PASSWORD</button>\n\n        </div>\n      </div>  \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}